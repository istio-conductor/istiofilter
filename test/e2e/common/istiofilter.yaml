apiVersion: v1
kind: ServiceAccount
metadata:
  name: istiofilter
  namespace: ${NAMESPACE}
---
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  labels:
    app: istiofilter
  namespace: ${NAMESPACE}
  name: istiofilter
rules:
  - apiGroups:
      - ""
    resources:
      - configmaps
      - events
    verbs:
      - '*'
  - verbs:
      - '*'
    apiGroups:
      - coordination.k8s.io
    resources:
      - '*'
---
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  labels:
    app: istiofilter
  namespace: ${NAMESPACE}
  name: istiofilter
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: istiofilter
subjects:
  - kind: ServiceAccount
    name: istiofilter
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  labels:
    app: istiofilter
  name: istiofilter-${NAMESPACE}
rules:
  - apiGroups:
      - networking.istio.io
    resources:
      - '*'
    verbs:
      - get
      - watch
      - list
  - apiGroups:
      - configuration.istio-conductor.org/v1alpha1
    resources:
      - '*'
    verbs:
      - get
      - watch
      - list
      - update
      - patch
      - create
      - delete
  - apiGroups:
      - networking.istio.io
    resources:
      - virtualservices
      - destinationrules
    verbs:
      - get
      - watch
      - list
      - update
      - patch
      - create
      - delete
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  labels:
    app: istiofilter
  name: istiofilter-${NAMESPACE}
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: istiofilter-${NAMESPACE}
subjects:
  - kind: ServiceAccount
    name: istiofilter
    namespace: ${NAMESPACE}
---
apiVersion: v1
data:
  key.pem: ${KEY}
  cert.pem: ${CERT}
kind: Secret
metadata:
  name: "istiofilter-certs"
  namespace: ${NAMESPACE}
type: Opaque
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: "istiofilter"
  namespace: ${NAMESPACE}
spec:
  selector:
    matchLabels:
      app: "istiofilter"
  template:
    metadata:
      labels:
        app: "istiofilter"
    spec:
      serviceAccountName: istiofilter
      volumes:
        - name: cert
          secret:
            secretName: "istiofilter-certs"
      containers:
        - name: "istiofilter"
          image: istioconductor/istiofilter:${FILTER_VERSION}
          imagePullPolicy: Never
          volumeMounts:
            - mountPath: /root/cert
              name: cert
          args:
            - --privilegeNamespaces=${NAMESPACE}
            - --port=443
            - --keyFile=/root/cert/key.pem
            - --certFile=/root/cert/cert.pem
            - --logLevel=debug
---
apiVersion: v1
kind: Service
metadata:
  namespace: ${NAMESPACE}
  name: istiofilter
spec:
  selector:
    app: "istiofilter"
  ports:
    - port: 443
      targetPort: 443
      name: https
---
apiVersion: admissionregistration.k8s.io/v1
kind: MutatingWebhookConfiguration
metadata:
  name: istiofilter-webhook
webhooks:
  - admissionReviewVersions:
      - v1beta1
      - v1
    clientConfig:
      caBundle: ${CERT}
      service:
        name: istiofilter
        namespace: ${NAMESPACE}
        path: /mutate
        port: 443
    failurePolicy: Fail
    matchPolicy: Exact
    name: istiofilter.${NAMESPACE}.svc.cluster.local
    reinvocationPolicy: Never
    rules:
      - apiGroups:
          - "networking.istio.io"
        apiVersions:
          - v1alpha3
        operations:
          - CREATE
          - UPDATE
        resources:
          - virtualservices
          - destinationrules
        scope: '*'
    sideEffects: None
    timeoutSeconds: 30